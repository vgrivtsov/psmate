/*! so-multiselect - 1.0.0 - 2016-05-23
 * Copyright (c) 2016 Sonalake;
 */
!function(a,b,c,d){"use strict";c.module("multiselect.controllers",[]).controller("MultiSelectController",["$scope","$attrs","$parse","$filter","MultiSelectConfig","MultiSelectService",function(a,b,d,e,f,g){var h,i=this,j=a.$new(),k=f.openClass,l=c.noop,m=b.onToggle?d(b.onToggle):c.noop,n=!0;this.init=function(c){i.$element=c,b.isOpen&&(h=d(b.isOpen),l=h.assign,a.$watch(h,function(a){j.isOpen=!!a})),a.selectedItems()},this.toggle=function(a){return j.isOpen=arguments.length?!!a:!j.isOpen,j.isOpen},this.isOpen=function(){return j.isOpen},j.getToggleElement=function(){return i.toggleElement},j.getMenuElement=function(){return i.menuElement},j.focusToggleElement=function(){i.toggleElement&&i.toggleElement[0].focus()},a.itemSelected=function(b){a.filterItems[b]&&(a.filterItems[b].selected=!a.filterItems[b].selected)},a.selectedItemsString="All",a.selectedItems=function(){var b=e("filter")(a.filterItems,{selected:!0}),c="";if(0===b.length)c="All";else for(var d=0;d<b.length;d++)c+=b[d].name,d!==b.length-1&&(c+=", ");a.selectedItemsString=c,n?n=!1:j.filterOnSelected({selectedItems:b})},j.$watch("isOpen",function(b,d){b?i.$element.addClass(k):i.$element.removeClass(k),b?(j.focusToggleElement(),g.open(j)):g.close(j),l(a,b),c.isDefined(b)&&b!==d&&m(a,{open:!!b})}),a.$on("$locationChangeSuccess",function(){j.isOpen=!1}),a.$on("$destroy",function(){j.$destroy()})}]),c.module("multiselect.directive",[]).directive("soMultiselect",function(){return{restrict:"EA",scope:{filterName:"@name",filterItems:"=items",filterOnSelected:"&onSelected",buttonClasses:"@buttonClass"},controller:"MultiSelectController",replace:!0,templateUrl:"templates/multiselect.tpl.html",link:function(a,b,c,d){a.filterItems&&a.filterItems.length>0&&d.init(b)}}}).directive("soMultiselectToggle",function(){return{restrict:"CA",require:"?^soMultiselect",link:function(a,b,d,e){if(e){var f=b.parent();e.toggleElement=b,e.menuElement=c.element(f.children()[1]);var g=function(c){c.preventDefault(),b.hasClass("disabled")||d.disabled||a.$apply(function(){e.toggle()})};b.bind("click",g),b.attr({"aria-haspopup":!0,"aria-expanded":!1}),a.$watch(e.isOpen,function(a){b.attr("aria-expanded",!!a)}),a.$on("$destroy",function(){b.unbind("click",g)})}}}}),c.module("so.multiselect",["multiselect.controllers","multiselect.directive","multiselect.services"]).constant("MultiSelectConfig",{openClass:"open"}).run(["$templateCache",function(a){a.put("templates/multiselect.tpl.html",'<div class="multiselect-container">\n    <button class="btn {{buttonClasses}} so-multiselect-toggle" ng-click="open=!open">\n        <div class="filter-wrap"><span class="filter-label">{{filterName}}:</span> <span class="filter-values">{{selectedItemsString}}</span></div>\n        <span class="caret" ng-if="filterItems.length > 0"></span>\n    </button>\n    <ul class="multiselect-menu" aria-labelledby="dropdownMenu">\n        <li ng-repeat="item in filterItems" ng-click="selectedItems()">\n            <input type="checkbox" ng-model="item.selected" /><span ng-click="itemSelected($index)">{{item.name}}</span>\n        </li>\n    </ul>\n</div>\n')}]),c.module("multiselect.services",[]).service("MultiSelectService",["$document",function(a){var b=null,c=function(a){var c=b.getToggleElement(),d=b.getMenuElement();a&&c&&c[0].contains(a.target)||a&&d&&d[0].contains(a.target)||b.$apply(function(){b.isOpen=!1})},d=function(a){27===a.which&&(b.focusToggleElement(),c())};this.open=function(e){b||(a.bind("click",c),a.bind("keydown",d)),b&&b!==e&&(b.isOpen=!1),b=e},this.close=function(e){b===e&&(b=null,a.unbind("click",c),a.unbind("keydown",d))}}])}(window,window.$,window.angular);